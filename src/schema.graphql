scalar DateTime

type Query {
  users: [User!]!
  user(id: ID!): User!
  usersByClass(class: String!): [User!]!
}

type Mutation {
  createUser(name: String!, email: String!, password: String!): AuthPayload!
  login(email: String!, password: String!): AuthPayload!
  deleteUser(id: ID!): User!
  updateUser(id: ID!, name: String!, email: String!, class: String!): User!
  changePassword(id: ID!, password: String!): String!
  addPoints(id: ID!, points: Int!, description: String): Int!
  removePoints(id: ID!, points: Int!, description: String): Int!
}

type AuthPayload {
  token: String
  user: User
}

type Entry {
  id: ID!
  change: String!
  description: String!
  postedBy: User!
  createdAt: DateTime!
}

type User {
  id: ID!
  name: String!
  email: String!
  password: String!
  balance: Int!
  log: [Entry]!
  class: String!
}
